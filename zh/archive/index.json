[{"content":"使用标签承载内容 结构  html  head  title meta   body    文本  标题（heading）和段落（paragraph）  h1 ~ h6 p   上标（superscript）和下标（subscript）  sup sub   空白（白色空间折叠） 折行（break）和水平标尺（horizontal ruler）  br hr   语义化标签  加粗和强调 - strong 引用 - blockquote 缩写词和首字母缩写词 - abbr / acronym 引文 - cite 所有者联系信息 - address 内容的修改 - ins / del    列表（list）  有序列表（ordered list）- ol / li 无序列表（unordered list）- ul / li 定义列表（definition list）- dl / dt / dd  链接（anchor）  页面链接 锚链接 功能链接  图像（image）   图像存储位置(src属性)\n  图像及其宽高\n  选择正确的图像格式\n JPEG GIF PNG    矢量图\n  语义化标签 - figure / figcaption\n  表格（table）  基本的表格结构 - table / tr / td / th 表格的标题 - caption 跨行和跨列 - rowspan属性 / colspan属性 长表格 - thead / tbody / tfoot  表单（form）  重要属性 - action / method / enctype 表单控件（input）- type属性  文本框 - text / 密码框 - password / 数字框 - number 邮箱 - email / 电话 - tel / 日期 - date / 滑条 - range / URL - url / 搜索 - search 单选按钮 - radio / 复选按钮 - checkbox 文件上传 - file / 隐藏域 - hidden 提交按钮 - submit / 图像按钮 - image / 重置按钮 - reset   下拉列表 - select / option 文本域（多行文本）- textarea 组合表单元素 - fieldset / legend  音视频（audio / video）  视频格式和播放器 视频托管服务 添加视频的准备工作 video标签和属性 - autoplay / controls / loop / muted / preload / src audio标签和属性 - autoplay / controls / loop / muted / preload / src / width / height / poster  窗口（frame）   框架集（过时，不建议使用） - frameset / frame\n  内嵌窗口 - iframe\n  其他   文档类型\n1  \u0026lt;!doctype html\u0026gt;\r  1  \u0026lt;!DOCTYPE HTML PUBLIC \u0026#34;-//W3C//DTD HTML 4.01//EN\u0026#34; \u0026#34;http://www.w3.org/TR/html4/strict.dtd\u0026#34;\u0026gt;\r  1  \u0026lt;!DOCTYPE HTML PUBLIC \u0026#34;-//W3C//DTD HTML 4.01 Transitional//EN\u0026#34; \u0026#34;http://www.w3.org/TR/html4/loose.dtd\u0026#34;\u0026gt;\r    注释\n1  \u0026lt;!-- 这是一段注释，注释不能够嵌套 --\u0026gt;\r    属性\n id：唯一标识 class：元素所属的类，用于区分不同的元素 title：元素的额外信息（鼠标悬浮时会显示工具提示文本） tabindex：Tab键切换顺序 contenteditable：元素是否可编辑 draggable：元素是否可拖拽    块级元素 / 行级元素\n  字符实体（实体替换符）\n  使用CSS渲染页面 简介   CSS的作用\n  CSS的工作原理\n  规则、属性和值\n  常用选择器CSS 选择器参考手册\n  颜色（color）  如何指定颜色 颜色术语和颜色对比 背景色  文本（text / font）   参考文档地址\n  文本的大小和字型(font-size / font-family)\n  粗细、样式、拉伸和装饰(font-weight / font-style / font-stretch / text-decoration)\n  行间距(line-height)、字母间距(letter-spacing)和单词间距(word-spacing)\n  对齐(text-align)方式和缩进(text-ident)\n  链接样式（:link / :visited / :active / :hover）\n  CSS3新属性\n 阴影效果 - text-shadow 首字母和首行文本(:first-letter / :first-line) 响应用户    盒子（box model）   参考文档地址\n  盒子大小的控制（width / height）\n  盒子的边框、外边距和内边距（border / margin / padding）\n  盒子的显示和隐藏（display / visibility）\n  CSS3新属性\n 边框图像（border-image） 投影（border-shadow） 圆角（border-radius）    列表、表格和表单  列表的项目符号（list-style） 表格的边框和背景（border-collapse） 表单控件的外观 表单控件的对齐 浏览器的开发者工具  图像  控制图像的大小（display: inline-block） 对齐图像 背景图像（background / background-image / background-repeat / background-position）  布局      控制元素的位置（position / z-index）\n 普通流 相对定位 绝对定位 固定定位 浮动元素（float / clear）    网站布局\n HTML5布局    适配屏幕尺寸\n 固定宽度布局 流体布局 布局网格    使用JavaScript控制行为 JavaScript基本语法  语句和注释 变量和数据类型  声明和赋值 简单数据类型和复杂数据类型 变量的命名规则   表达式和运算符  赋值运算符 算术运算符 比较运算符 逻辑运算符   分支结构  if...else... switch...cas...default...   循环结构  for循环 while循环 do...while循环   数组  创建数组 操作数组中的元素   函数  声明函数  1 2  function test(){}\rlet test1 = function(){}\r   调用函数 1  test()\r   参数和返回值(return) 1 2 3  function test(a){//参数a\r return a + 1//返回值\r}\r   匿名函数 1 2  function(){}\r()=\u0026gt;{}\r   立即调用函数 1 2 3 4 5 6  //函数定义，执行的时候自定义函数不调用函数，需要另外调用函数\rfunction test(){}\r// 调用函数\rtest()\r// 立即调用函数/自执行函数，执行该代码的时候，该函数就会调用，不需要另外调用函数\r(function(){})()\r      面向对象  对象的概念 创建对象的字面量语法 访问成员运算符 创建对象的构造函数语法  this关键字   添加和删除属性  delete关键字  1 2 3  let test = { a:1, b:2 }\rdelete test[\u0026#39;a\u0026#39;]\r// test =\u0026gt; {b:2}\r   标准对象  Number / String / Boolean / Symbol / Array / Function Date / Error / Math / RegExp / Object / Map / Set JSON / Promise / Generator / Reflect / Proxy    BOM  window对象的属性和方法 history对象  forward() / back() / go()   location对象 navigator对象 screen对象  DOM  DOM树 访问元素  getElementById() / querySelector() getElementsByClassName() / getElementsByTagName() / querySelectorAll() parentNode / previousSibling / nextSibling / children / firstChild / lastChild   操作元素  nodeValue innerHTML / textContent / createElement() / createTextNode() / appendChild() / insertBefore() / removeChild() className / id / hasAttribute() / getAttribute() / setAttribute() / removeAttribute()   事件处理  事件类型  UI事件：load / unload / error / resize / scroll 键盘事件：keydown / keyup / keypress 鼠标事件：click / dbclick / mousedown / mouseup / mousemove / mouseover / mouseout 焦点事件：focus / blur 表单事件：input / change / submit / reset / cut / copy / paste / select   事件绑定  HTML事件处理程序（不推荐使用，因为要做到标签与代码分离） 传统的DOM事件处理程序（只能附加一个回调函数） 事件监听器（旧的浏览器中不被支持）   事件流：事件捕获 / 事件冒泡 事件对象（低版本IE中的window.event）  target（有些浏览器使用srcElement） type cancelable preventDefault() stopPropagation()（低版本IE中的cancelBubble）   鼠标事件 - 事件发生的位置  屏幕位置：screenX和screenY 页面位置：pageX和pageY 客户端位置：clientX和clientY   键盘事件 - 哪个键被按下了  keyCode属性（有些浏览器使用which） String.fromCharCode(event.keyCode)   HTML5事件  DOMContentLoaded hashchange beforeunload      JavaScript API   客户端存储 - localStorage和sessionStorage\n1 2 3  localStorage.colorSetting = \u0026#39;#a4509b\u0026#39;;\rlocalStorage[\u0026#39;colorSetting\u0026#39;] = \u0026#39;#a4509b\u0026#39;;\rlocalStorage.setItem(\u0026#39;colorSetting\u0026#39;, \u0026#39;#a4509b\u0026#39;);\r    获取位置信息 - geolocation\n1 2 3 4  navigator.geolocation.getCurrentPosition(function(pos) { console.log(pos.coords.latitude)\rconsole.log(pos.coords.longitude)\r})\r    从服务器获取数据 - Fetch API\n  绘制图形 - \u0026lt;canvas\u0026gt;的API\n  音视频 - \u0026lt;audio\u0026gt;和\u0026lt;video\u0026gt;的API\n  查找元素  选择器  * / element / #id / .class / selector1, selector2 ancestor descendant / parent\u0026gt;child / previous+next / previous~siblings   筛选器  基本筛选器：:not(selector) / :first / :last / :even / :odd / :eq(index) / :gt(index) / :lt(index) / :animated / :focus 内容筛选器：:contains('…') / :empty / :parent / :has(selector) 可见性筛选器：:hidden / :visible 子节点筛选器：:nth-child(expr) / :first-child / :last-child / :only-child 属性筛选器：[attribute] / [attribute='value\u0026rsquo;] / [attribute!='value\u0026rsquo;] / [attribute^='value\u0026rsquo;] / [attribute$='value\u0026rsquo;] / [attribute|='value\u0026rsquo;] / [attribute~='value\u0026rsquo;]   表单：:input / :text / :password / :radio / :checkbox / :submit / :image / :reset / :button / :file / :selected / :enabled / :disabled / :checked  执行操作  内容操作  获取/修改内容：html() / text() / replaceWith() / remove() 获取/设置元素：before() / after() / prepend() / append() / remove() / clone() / unwrap() / detach() / empty() / add() 获取/修改属性：attr() / removeAttr() / addClass() / removeClass() / css() 获取/设置表单值：val()   查找操作  查找方法：find() / parent() / children() / siblings() / next() / nextAll() / prev() / prevAll() 筛选器：filter() / not() / has() / is() / contains() 索引编号：eq()   尺寸和位置  尺寸相关：height() / width() / innerHeight() / innerWidth() / outerWidth() / outerHeight() 位置相关：offset() / position() / scrollLeft() / scrollTop()   特效和动画  基本动画：show() / hide() / toggle() 消失出现：fadeIn() / fadeOut() / fadeTo() / fadeToggle() 滑动效果：slideDown() / slideUp() / slideToggle() 自定义：delay() / stop() / animate()   事件  文档加载：ready() / load() 用户交互：on() / off()    链式操作 检测页面是否可用 1 2 3 4 5  \u0026lt;script\u0026gt;\r$(document).ready(function() {\r});\r\u0026lt;/script\u0026gt;\r  1 2 3 4 5  \u0026lt;script\u0026gt;\r$(function() {\r});\r\u0026lt;/script\u0026gt;\r  使用Ajax Ajax是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。\n 原生的Ajax 基于jQuery的Ajax  加载内容 提交表单    前端框架 渐进式框架 - Vue.js 前后端分离开发（前端渲染）必选框架。\n快速上手   引入Vue的JavaScript文件，我们仍然推荐从CDN服务器加载它。\n1  \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r    数据绑定（声明式渲染 ）。\n1 2 3 4 5 6 7 8 9 10 11 12 13  \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;h1\u0026gt;{{ product }}库存信息\u0026lt;/h1\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#app\u0026#39;,\rdata: {\rproduct: \u0026#39;iPhone X\u0026#39;\r}\r});\r\u0026lt;/script\u0026gt;\r    条件与循环。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;h1\u0026gt;库存信息\u0026lt;/h1\u0026gt;\r\u0026lt;hr\u0026gt;\r\u0026lt;ul\u0026gt;\r\u0026lt;li v-for=\u0026#34;product in products\u0026#34;\u0026gt;\r{{ product.name }} - {{ product.quantity }}\r\u0026lt;span v-if=\u0026#34;product.quantity === 0\u0026#34;\u0026gt;\r已经售罄\r\u0026lt;/span\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#app\u0026#39;,\rdata: {\rproducts: [\r{\u0026#34;id\u0026#34;: 1, \u0026#34;name\u0026#34;: \u0026#34;iPhone X\u0026#34;, \u0026#34;quantity\u0026#34;: 20},\r{\u0026#34;id\u0026#34;: 2, \u0026#34;name\u0026#34;: \u0026#34;华为 Mate20\u0026#34;, \u0026#34;quantity\u0026#34;: 0},\r{\u0026#34;id\u0026#34;: 3, \u0026#34;name\u0026#34;: \u0026#34;小米 Mix3\u0026#34;, \u0026#34;quantity\u0026#34;: 50}\r]\r}\r});\r\u0026lt;/script\u0026gt;\r    计算属性。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;h1\u0026gt;库存信息\u0026lt;/h1\u0026gt;\r\u0026lt;hr\u0026gt;\r\u0026lt;ul\u0026gt;\r\u0026lt;li v-for=\u0026#34;product in products\u0026#34;\u0026gt;\r{{ product.name }} - {{ product.quantity }}\r\u0026lt;span v-if=\u0026#34;product.quantity === 0\u0026#34;\u0026gt;\r已经售罄\r\u0026lt;/span\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;h2\u0026gt;库存总量：{{ totalQuantity }}台\u0026lt;/h2\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#app\u0026#39;,\rdata: {\rproducts: [\r{\u0026#34;id\u0026#34;: 1, \u0026#34;name\u0026#34;: \u0026#34;iPhone X\u0026#34;, \u0026#34;quantity\u0026#34;: 20},\r{\u0026#34;id\u0026#34;: 2, \u0026#34;name\u0026#34;: \u0026#34;华为 Mate20\u0026#34;, \u0026#34;quantity\u0026#34;: 0},\r{\u0026#34;id\u0026#34;: 3, \u0026#34;name\u0026#34;: \u0026#34;小米 Mix3\u0026#34;, \u0026#34;quantity\u0026#34;: 50}\r]\r},\rcomputed: {\rtotalQuantity() {\rreturn this.products.reduce((sum, product) =\u0026gt; {\rreturn sum + product.quantity\r}, 0);\r}\r}\r});\r\u0026lt;/script\u0026gt;\r    处理事件。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;h1\u0026gt;库存信息\u0026lt;/h1\u0026gt;\r\u0026lt;hr\u0026gt;\r\u0026lt;ul\u0026gt;\r\u0026lt;li v-for=\u0026#34;product in products\u0026#34;\u0026gt;\r{{ product.name }} - {{ product.quantity }}\r\u0026lt;span v-if=\u0026#34;product.quantity === 0\u0026#34;\u0026gt;\r已经售罄\r\u0026lt;/span\u0026gt;\r\u0026lt;button @click=\u0026#34;product.quantity += 1\u0026#34;\u0026gt;\r增加库存\r\u0026lt;/button\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;h2\u0026gt;库存总量：{{ totalQuantity }}台\u0026lt;/h2\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#app\u0026#39;,\rdata: {\rproducts: [\r{\u0026#34;id\u0026#34;: 1, \u0026#34;name\u0026#34;: \u0026#34;iPhone X\u0026#34;, \u0026#34;quantity\u0026#34;: 20},\r{\u0026#34;id\u0026#34;: 2, \u0026#34;name\u0026#34;: \u0026#34;华为 Mate20\u0026#34;, \u0026#34;quantity\u0026#34;: 0},\r{\u0026#34;id\u0026#34;: 3, \u0026#34;name\u0026#34;: \u0026#34;小米 Mix3\u0026#34;, \u0026#34;quantity\u0026#34;: 50}\r]\r},\rcomputed: {\rtotalQuantity() {\rreturn this.products.reduce((sum, product) =\u0026gt; {\rreturn sum + product.quantity\r}, 0);\r}\r}\r});\r\u0026lt;/script\u0026gt;\r    用户输入。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;h1\u0026gt;库存信息\u0026lt;/h1\u0026gt;\r\u0026lt;hr\u0026gt;\r\u0026lt;ul\u0026gt;\r\u0026lt;li v-for=\u0026#34;product in products\u0026#34;\u0026gt;\r{{ product.name }} - \u0026lt;input type=\u0026#34;number\u0026#34; v-model.number=\u0026#34;product.quantity\u0026#34; min=\u0026#34;0\u0026#34;\u0026gt;\r\u0026lt;span v-if=\u0026#34;product.quantity === 0\u0026#34;\u0026gt;\r已经售罄\r\u0026lt;/span\u0026gt;\r\u0026lt;button @click=\u0026#34;product.quantity += 1\u0026#34;\u0026gt;\r增加库存\r\u0026lt;/button\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;h2\u0026gt;库存总量：{{ totalQuantity }}台\u0026lt;/h2\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#app\u0026#39;,\rdata: {\rproducts: [\r{\u0026#34;id\u0026#34;: 1, \u0026#34;name\u0026#34;: \u0026#34;iPhone X\u0026#34;, \u0026#34;quantity\u0026#34;: 20},\r{\u0026#34;id\u0026#34;: 2, \u0026#34;name\u0026#34;: \u0026#34;华为 Mate20\u0026#34;, \u0026#34;quantity\u0026#34;: 0},\r{\u0026#34;id\u0026#34;: 3, \u0026#34;name\u0026#34;: \u0026#34;小米 Mix3\u0026#34;, \u0026#34;quantity\u0026#34;: 50}\r]\r},\rcomputed: {\rtotalQuantity() {\rreturn this.products.reduce((sum, product) =\u0026gt; {\rreturn sum + product.quantity\r}, 0);\r}\r}\r});\r\u0026lt;/script\u0026gt;\r    通过网络加载JSON数据。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;h2\u0026gt;库存信息\u0026lt;/h2\u0026gt;\r\u0026lt;ul\u0026gt;\r\u0026lt;li v-for=\u0026#34;product in products\u0026#34;\u0026gt;\r{{ product.name }} - {{ product.quantity }}\r\u0026lt;span v-if=\u0026#34;product.quantity === 0\u0026#34;\u0026gt;\r已经售罄\r\u0026lt;/span\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#app\u0026#39;,\rdata: {\rproducts: []\r}，\rcreated() {\rfetch(\u0026#39;https://jackfrued.top/api/products\u0026#39;)\r.then(response =\u0026gt; response.json())\r.then(json =\u0026gt; {\rthis.products = json\r});\r}\r});\r\u0026lt;/script\u0026gt;\r    使用脚手架 - vue-cli Vue为商业项目开发提供了非常便捷的脚手架工具vue-cli，通过工具可以省去手工配置开发环境、测试环境和运行环境的步骤，让开发者只需要关注要解决的问题。\n 安装脚手架。 创建项目。 安装依赖包。 运行项目。  UI框架 插件框架 - 例如：报表ECharts，百度出品的开源可视化库，常用于生成各种类型的报表。 基于弹性盒子的CSS框架 - Bulma Bulma是一个基于Flexbox的现代化的CSS框架，其初衷就是移动优先（Mobile First），模块化设计，可以轻松用来实现各种简单或者复杂的内容布局，即使不懂CSS的开发者也能够使用它定制出漂亮的页面。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;Bulma\u0026lt;/title\u0026gt;\r\u0026lt;link href=\u0026#34;https://cdn.bootcss.com/bulma/0.7.4/css/bulma.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt;\r\u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt;\rdiv { margin-top: 10px; }\r.column { color: #fff; background-color: #063; margin: 10px 10px; text-align: center; }\r\u0026lt;/style\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;div class=\u0026#34;columns\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;column\u0026#34;\u0026gt;1\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;column\u0026#34;\u0026gt;2\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;column\u0026#34;\u0026gt;3\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;column\u0026#34;\u0026gt;4\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;a class=\u0026#34;button is-primary\u0026#34;\u0026gt;Primary\u0026lt;/a\u0026gt;\r\u0026lt;a class=\u0026#34;button is-link\u0026#34;\u0026gt;Link\u0026lt;/a\u0026gt;\r\u0026lt;a class=\u0026#34;button is-info\u0026#34;\u0026gt;Info\u0026lt;/a\u0026gt;\r\u0026lt;a class=\u0026#34;button is-success\u0026#34;\u0026gt;Success\u0026lt;/a\u0026gt;\r\u0026lt;a class=\u0026#34;button is-warning\u0026#34;\u0026gt;Warning\u0026lt;/a\u0026gt;\r\u0026lt;a class=\u0026#34;button is-danger\u0026#34;\u0026gt;Danger\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;progress class=\u0026#34;progress is-danger is-medium\u0026#34; max=\u0026#34;100\u0026#34;\u0026gt;60%\u0026lt;/progress\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;table class=\u0026#34;table is-hoverable\u0026#34;\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;th\u0026gt;One\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;Two\u0026lt;/th\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;Three\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;Four\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;Five\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;Six\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;Seven\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;Eight\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;Nine\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;Ten\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;Eleven\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;Twelve\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/table\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r  响应式布局框架 - Bootstrap 用于快速开发Web应用程序的前端框架，支持响应式布局。\n  特点\n 支持主流的浏览器和移动设备 容易上手 响应式设计    内容\n 网格系统 封装的CSS 现成的组件 JavaScript插件    可视化\n  ","description":"","id":0,"section":"posts","tags":["web"],"title":"Web前端概述","uri":"https://zhenhuizhang.github.io/zh/posts/web-frontend-guide/"},{"content":"你好呀\n","description":"","id":1,"section":"posts","tags":["生活随笔"],"title":"My First Post","uri":"https://zhenhuizhang.github.io/zh/posts/my-first-post/"}]